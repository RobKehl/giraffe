# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.36
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _icalmapi
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


VEVENT = _icalmapi.VEVENT
VTODO = _icalmapi.VTODO
VJOURNAL = _icalmapi.VJOURNAL
IC2M_NO_RECIPIENTS = _icalmapi.IC2M_NO_RECIPIENTS
IC2M_APPEND_ONLY = _icalmapi.IC2M_APPEND_ONLY
IC2M_NO_ORGANIZER = _icalmapi.IC2M_NO_ORGANIZER
class ICalToMapi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ICalToMapi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ICalToMapi, name)
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _icalmapi.delete_ICalToMapi
    __del__ = lambda self : None;
    def ParseICal(*args): return _icalmapi.ICalToMapi_ParseICal(*args)
    def GetItemCount(*args): return _icalmapi.ICalToMapi_GetItemCount(*args)
    def GetItemInfo(*args): return _icalmapi.ICalToMapi_GetItemInfo(*args)
    def GetItem(*args): return _icalmapi.ICalToMapi_GetItem(*args)
    def GetFreeBusyInfo(*args): return _icalmapi.ICalToMapi_GetFreeBusyInfo(*args)
ICalToMapi_swigregister = _icalmapi.ICalToMapi_swigregister
ICalToMapi_swigregister(ICalToMapi)

CreateICalToMapi = _icalmapi.CreateICalToMapi
M2IC_CENSOR_PRIVATE = _icalmapi.M2IC_CENSOR_PRIVATE
M2IC_NO_VTIMEZONE = _icalmapi.M2IC_NO_VTIMEZONE
class MapiToICal(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MapiToICal, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MapiToICal, name)
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _icalmapi.delete_MapiToICal
    __del__ = lambda self : None;
    def AddMessage(*args): return _icalmapi.MapiToICal_AddMessage(*args)
    def AddBlocks(*args): return _icalmapi.MapiToICal_AddBlocks(*args)
    def Finalize(*args): return _icalmapi.MapiToICal_Finalize(*args)
    def ResetObject(*args): return _icalmapi.MapiToICal_ResetObject(*args)
MapiToICal_swigregister = _icalmapi.MapiToICal_swigregister
MapiToICal_swigregister(MapiToICal)

CreateMapiToICal = _icalmapi.CreateMapiToICal


